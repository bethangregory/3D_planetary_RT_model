// things to improve/change in code

--fix CUDA implementaiton
  --matrix solution on GPU wasn't working at one point, fix this
--fast exp calculation
--32 bit vs 64 bit differences in code output?
--comparison with anderson
--comparison with chaufray
--problems with asym_calc
--any analytic test case? Maybe something asymptotic from Holstein?
--add alternate ray method to ensure rays populate the entire source function matrix

UIUC collaboration:
--compare with pratik brightness values
--think more about normalizaion effects on degeneracy


Near term:
--python fitting routine (get it running fast)
--move finite-difference derivative calculation inside observation_fit
--deuterium and hot H physical densities
--O I 102.6 nm radiance calculation (probably requires frequency redistribution)
--include single-scattering anisotropy

Needed next 6 months:
--IPH background (for IUVS apoapse images)

Small code improvements
  --incoroporate CO2 absorption in holstein function instead of midpoint approximation 
    (needs 2d holstein interps with absorption)
  --improve treatment of planetary shadow by doubling up voxels on the shadow boundary, with one treating the inside of the shadow and the other the outside.
  --use monotone cubic interpolation in brightness calculation
  --move emission tracker inside of emission, specific to emissions


longer-term:
--more realistic exosphere (Vidal-Madjar or similar)
--frequency redistribution (needs some refactoring of emission object)
--RT anisotropy??

done:
xx--compute voxel densities as average over zone rather than typical value
xx--switch from tabulated holstein T to computing it just-in-time as line integrals are traversed
    (smells like frequency redistribution;
     should be relatively easy, add line profile to tau_tracker)
